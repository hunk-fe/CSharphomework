<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta property="og:description" content="Js严格模式 严格模式 ，即在严格的条件下运行。严格模式消除了 语法的一些不合理、不严谨之处，减少一些怪异行为；消除代码运行的一些不安全之处，保证代码运行的安全；提高了引擎的效率，增加运行速度；为未来" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>Js严格模式 - WindrunnerMax - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=-oFz8B4m7JhHaZzdTkzPza2oLZNDRR8obnCz6w7OHbU" />
    <link id="MainCss" rel="stylesheet" href="/skins/custom/bundle-custom.min.css?v=1ssrnY3Il79Ok472qeVrpxlSprSXcHhYPgZC5S3wtVM" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/WindrunnerMax/custom.css?v=7rnz5TtMcHt9VmgMA7H/K8T8fSI=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/custom/bundle-custom-mobile.min.css?v=-Yh290MhQyDeXLmvKTSses9H6-49lqbpXFh55zvS0w8" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/WindrunnerMax/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/WindrunnerMax/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/WindrunnerMax/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=z6JkvKQ7L_bGD-nwJExYzsoFf5qnluqZJru6RsfoZuM"></script>
    <script>
        var currentBlogId = 589619;
        var currentBlogApp = 'WindrunnerMax';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'Custom';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/WindrunnerMax/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/WindrunnerMax/">WindrunnerMax</a>
</h1>
<h2>

</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/WindrunnerMax/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/WindrunnerMax">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/WindrunnerMax/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
77&nbsp; </span>
<span id="stats_article_count">文章 - 
0&nbsp; </span>
<span id="stats-comment_count">评论 - 
1</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/WindrunnerMax/p/12772580.html">Js严格模式</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
    <h1 id="js严格模式">Js严格模式</h1>
<p><code>JavaScript</code>严格模式<code>strict mode</code>，即在严格的条件下运行。严格模式消除了<code>Javascript</code>语法的一些不合理、不严谨之处，减少一些怪异行为；消除代码运行的一些不安全之处，保证代码运行的安全；提高了引擎的效率，增加运行速度；为未来新的<code>Js</code>版本做好铺垫。</p>
<h2 id="实例">实例</h2>
<p>针对整个脚本文件启用严格模式</p>
<pre><code class="language-javascript">&quot;use strict&quot;;
x = 1; // Uncaught ReferenceError: x is not defined
</code></pre>
<p>针对函数作用域启用严格模式</p>
<pre><code class="language-javascript">x = 1;
function s(){
    &quot;use strict&quot;;
    y = 1; // Uncaught ReferenceError: y is not defined
}
s();
</code></pre>
<h2 id="严格模式的限制">严格模式的限制</h2>
<h3 id="不允许直接声明全局变量">不允许直接声明全局变量</h3>
<pre><code class="language-javascript">// 非严格模式
x = 1;
console.log(window.x); // 1
</code></pre>
<pre><code class="language-javascript">// 严格模式
&quot;use strict&quot;;
var x = 1; // 可以使用var在全局作用域声明全局变量
y = 1; // Uncaught ReferenceError: y is not defined
</code></pre>
<h3 id="不允许使用delete关键字">不允许使用delete关键字</h3>
<pre><code class="language-javascript">// 非严格模式
var x = 1;
delete x; 
console.log(window.x); // undefined
</code></pre>
<pre><code class="language-javascript">// 严格模式
&quot;use strict&quot;;
var x = 1;
delete x; // Uncaught SyntaxError: Delete of an unqualified identifier in strict mode.
</code></pre>
<h3 id="要求函数的参数名唯一">要求函数的参数名唯一</h3>
<pre><code class="language-javascript">// 非严格模式
function s(a, a){
    console.log(a + a); // 6
}
s(2, 3);
</code></pre>
<pre><code class="language-javascript">// 严格模式
&quot;use strict&quot;;
function s(a, a){ // Uncaught SyntaxError: Duplicate parameter name not allowed in this context
    console.log(a + a);
}
s(2, 3);
</code></pre>
<h3 id="不允许使用八进制数字语法">不允许使用八进制数字语法</h3>
<pre><code class="language-javascript">// 非严格模式
var x = 010;
console.log(x); // 8
</code></pre>
<pre><code class="language-javascript">// 严格模式
&quot;use strict&quot;;
var y = 010; // Uncaught SyntaxError: Octal literals are not allowed in strict mode.
var x = 0O10; // 可以使用ES6中的八进制表示法新写法 前缀0o或0O
console.log(x); // 8
</code></pre>
<h3 id="不允许使用转义字符">不允许使用转义字符</h3>
<pre><code class="language-javascript">// 非严格模式
var x = &quot;\045&quot;;
console.log(x); // %
</code></pre>
<pre><code class="language-javascript">// 严格模式
&quot;use strict&quot;;
var x = &quot;\045&quot;; // Uncaught SyntaxError: Octal escape sequences are not allowed in strict mode.
</code></pre>
<h3 id="不允许对只读属性操作">不允许对只读属性操作</h3>
<pre><code class="language-javascript">// 非严格模式
// 操作静默失败，即不报错也没有任何效果

// 给不可写属性赋值
var obj = {};
Object.defineProperty(obj, &quot;x&quot;, {value:0, writable:false});
obj.x = 1;
console.log(obj.x); // 0

// 给只读属性赋值
var obj = { 
    _x: 0,
    get x() { return this._x; } 
};
obj.x = 1;
console.log(obj.x); // 0

// 给不可扩展对象的新属性赋值
var obj = {};
Object.preventExtensions(obj);
obj.x = 1;
console.log(obj.x); // undefined
</code></pre>
<pre><code class="language-javascript">// 严格模式
// 操作失败抛出异常
&quot;use strict&quot;;

// 给不可写属性赋值
var obj = {};
Object.defineProperty(obj, &quot;x&quot;, {value:0, writable:false});
obj.x = 1; // Uncaught TypeError: Cannot assign to read only property 'x' of object '#&lt;Object&gt;'

// 给只读属性赋值
var obj = { 
    _x: 0,
    get x() { return this._x; } 
};
obj.x = 1; // Uncaught TypeError: Cannot set property x of #&lt;Object&gt; which has only a getter

// 给不可扩展对象的新属性赋值
var obj = {};
Object.preventExtensions(obj);
obj.x = 1; // Uncaught TypeError: Cannot add property x, object is not extensible
</code></pre>
<h3 id="不允许使用保留关键字命名变量">不允许使用保留关键字命名变量</h3>
<pre><code class="language-javascript">// 非严格模式
var eval = 1;
console.log(eval); // 1
</code></pre>
<pre><code class="language-javascript">// 严格模式
&quot;use strict&quot;;
var eval = 1; // Uncaught SyntaxError: Unexpected eval or arguments in strict mode
</code></pre>
<h3 id="不允许使用with关键字">不允许使用with关键字</h3>
<pre><code class="language-javascript">// 非严格模式
var obj = { x:0 };
with(obj) {
    x = 1;
}
</code></pre>
<pre><code class="language-javascript">// 严格模式
&quot;use strict&quot;;
var obj = { x:0 };
with(obj) { // Uncaught SyntaxError: Strict mode code may not include a with statement
    x = 1;
}
</code></pre>
<h3 id="eval声明变量不能在外部使用">eval声明变量不能在外部使用</h3>
<pre><code class="language-javascript">// 非严格模式
eval(&quot;var x = 0&quot;);
console.log(x); // 0
</code></pre>
<pre><code class="language-javascript">// 严格模式
&quot;use strict&quot;;
eval(&quot;var x = 0&quot;);
console.log(x); // Uncaught ReferenceError: x is not defined
</code></pre>
<h3 id="arguments保留原始参数">arguments保留原始参数</h3>
<pre><code class="language-javascript">// 非严格模式
function s(a, b){
    a = 2;
    console.log(arguments[0], arguments[1]); // 2 2
}
s(1, 2);
</code></pre>
<pre><code class="language-javascript">// 严格模式
&quot;use strict&quot;;
function s(a, b){
    a = 2;
    console.log(arguments[0], arguments[1]); // 1 2
}
s(1, 2);
</code></pre>
<h3 id="this的限制">this的限制</h3>
<p>在严格模式下通过<code>this</code>传递给一个函数的值不会被强制转换为一个对象。对一个普通的函数来说，<code>this</code>总会是一个对象：不管调用时<code>this</code>它本来就是一个对象；还是用布尔值，字符串或者数字调用函数时函数里面被封装成对象的<code>this</code>；还是使用<code>undefined</code>或者<code>null</code>调用函数式<code>this</code>代表的全局对象（使用<code>call</code>,<code>apply</code>或者<code>bind</code>方法来指定一个确定的<code>this</code>）。这种自动转化为对象的过程不仅是一种性能上的损耗，同时在浏览器中暴露出全局对象也会成为安全隐患，因为全局对象提供了访问那些所谓安全的<code>JavaScript</code>环境必须限制的功能的途径。所以对于一个开启严格模式的函数，指定的<code>this</code>不再被封装为对象，而且如果没有指定<code>this</code>的话它值是<code>undefined</code>。</p>
<pre><code class="language-javascript">// 非严格模式
function s(){
    console.log(this); // Window ...
}
s();
</code></pre>
<pre><code class="language-javascript">// 严格模式
&quot;use strict&quot;;
function s(){
    console.log(this); // undefined
}
s();
</code></pre>
<h3 id="禁止访问调用栈">禁止访问调用栈</h3>
<p>在严格模式中再也不能通过广泛实现的<code>ECMAScript</code>扩展游走于<code>JavaScript</code>的栈中。在普通模式下用这些扩展的话，当一个叫<code>fun</code>的函数正在被调用的时候，<code>fun.caller</code>是最后一个调用<code>fun</code>的函数，而且<code>fun.arguments</code>包含调用fun时用的形参。这两个扩展接口对于安全<code>JavaScript</code>而言都是有问题的，因为他们允许安全的代码访问专有函数和他们的（通常是没有经过保护的）形参。如果<code>fun</code>在严格模式下，那么<code>fun.caller</code>和<code>fun.arguments</code>都是不可删除的属性而且在存值、取值时都会报错。</p>
<pre><code class="language-javascript">// 非严格模式
function ss(){
    console.log(ss.caller); // ƒ s(){ ss(); }
    console.log(ss.arguments); // Arguments [callee: ƒ, Symbol(Symbol.iterator): ƒ]
}
function s(){
    ss();
}
s();
</code></pre>
<pre><code class="language-javascript">// 严格模式
&quot;use strict&quot;;
function ss(){
    console.log(ss.caller); // Uncaught TypeError: 'caller', 'callee', and 'arguments' properties may not be accessed on strict mode functions or the arguments objects for calls to them
    console.log(ss.arguments); // Uncaught TypeError: 'caller', 'callee', and 'arguments' properties may not be accessed on strict mode functions or the arguments objects for calls to them ƒ]
}
function s(){
    ss();
}
s();
</code></pre>
<h2 id="参考">参考</h2>
<pre><code>https://www.runoob.com/js/js-strict.html
https://www.cnblogs.com/xumqfaith/p/7841338.html
https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Strict_mode
</code></pre>

</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2020-04-25 12:40</span>&nbsp;
<a href="https://www.cnblogs.com/WindrunnerMax/">WindrunnerMax</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12772580" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(12772580);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 589619, cb_blogApp = 'WindrunnerMax', cb_blogUserGuid = '1f7ba1f3-1007-4580-1e4f-08d7cc05a3a0';
    var cb_entryId = 12772580, cb_entryCreatedDate = '2020-04-25 12:40', cb_postType = 1; 
    loadViewCount(cb_entryId);
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;">
            <script>
                if (new Date() >= new Date(2018, 9, 13)) {
                    googletag.cmd.push(function () { googletag.display("div-gpt-ad-1539008685004-0"); });
                }
            </script>
        </div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 WindrunnerMax
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>